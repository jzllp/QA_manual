{
	"info": {
		"_postman_id": "7ec1e114-2a6e-4c55-acc1-4ce12f26045b",
		"name": "07 задание 8.6",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Session token exists\", function () {\r",
							"    pm.expect(pm.cookies.has(\"Session\")).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text"
						},
						{
							"key": "pass",
							"value": "{{pass}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"test1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"test2\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"5\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "test1",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "test2",
							"type": "text"
						},
						{
							"key": "age",
							"value": "5",
							"type": "text"
						},
						{
							"key": "pet_photo",
							"type": "file",
							"src": "cKBSPyvuY/1.jpg"
						}
					]
				},
				"url": {
					"raw": "{{url}}/api/pets",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/pets?filter=my_pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"ваше название\", function () {\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"petId\", jsonData.pets[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/pets?filter=my_pets",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"animal_type\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"type\"));\r",
							"});\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"age\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{name}}\",\r\n  \"animal_type\": \"{{type}}\",\r\n  \"age\": \"{{age}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/pets/{{petId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"pets",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response really has no data of created pet\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"{{petId}}\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/pets/{{petId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"pets",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Session token exists\", function () {\r",
							"    pm.expect(pm.cookies.has(\"Session\")).to.be.false;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/logout",
					"host": [
						"{{url}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://petfriends1.herokuapp.com/",
			"type": "string"
		},
		{
			"key": "email",
			"value": "cannoly@gmail.com",
			"type": "string"
		},
		{
			"key": "pass",
			"value": "12222222",
			"type": "string"
		},
		{
			"key": "petId",
			"value": ""
		}
	]
}